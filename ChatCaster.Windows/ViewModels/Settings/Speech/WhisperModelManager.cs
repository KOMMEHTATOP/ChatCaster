using System.Collections.ObjectModel;
using ChatCaster.Core.Events;
using ChatCaster.Core.Models;
using ChatCaster.Windows.Services;
using Serilog;

namespace ChatCaster.Windows.ViewModels.Settings.Speech
{
    /// <summary>
    /// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª—è–º–∏ Whisper (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π - —Ç–æ–ª—å–∫–æ –º–æ–¥–µ–ª–∏)
    /// </summary>
    public class WhisperModelManager
    {
        #region Events
        public event EventHandler<ModelStatusChangedEventArgs>? ModelStatusChanged;
        public event EventHandler<ModelDownloadButtonStateChangedEventArgs>? DownloadButtonStateChanged;
        #endregion

        #region Private Fields
        private readonly SpeechRecognitionService? _speechRecognitionService;
        private bool _isDownloadingModel = false;
        #endregion

        #region Public Properties
        public ObservableCollection<WhisperModelItem> AvailableModels { get; } = new();
        public WhisperModelItem? SelectedModel { get; set; }
        public bool IsDownloadingModel => _isDownloadingModel;
        #endregion

        #region Constructor
        public WhisperModelManager(SpeechRecognitionService? speechRecognitionService)
        {
            Log.Information("[WMM] –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑–≤–∞–Ω");
            _speechRecognitionService = speechRecognitionService;
            
            // üî• –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ä–∞–∑—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
            if (_speechRecognitionService != null)
            {
                _speechRecognitionService.DownloadProgress += OnBackgroundDownloadProgress;
                _speechRecognitionService.DownloadCompleted += OnBackgroundDownloadCompleted;
                Log.Information("[WMM] –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ñ–æ–Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏");
            }
            
            InitializeStaticData();
            Log.Information("[WMM] WhisperModelManager —Å–æ–∑–¥–∞–Ω");
        }
        #endregion

        #region Public Methods

        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        /// </summary>
        public async Task CheckModelStatusAsync()
        {
            try
            {
                if (_speechRecognitionService == null || SelectedModel == null)
                {
                    Log.Warning("[WMM] SpeechRecognitionService –∏–ª–∏ SelectedModel –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–∏");
                    return;
                }

                Log.Information("[WMM] === –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ú–û–î–ï–õ–ò ===");
                Log.Information("[WMM] –í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: {UIModel} ({DisplayName})", SelectedModel.Model, SelectedModel.DisplayName);
                Log.Information("[WMM] –ú–æ–¥–µ–ª—å –≤ —Å–µ—Ä–≤–∏—Å–µ: {ServiceModel}", _speechRecognitionService.CurrentModel);
                Log.Information("[WMM] –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: {IsInitialized}", _speechRecognitionService.IsInitialized);

                bool isAvailable = await _speechRecognitionService.IsModelAvailableAsync(SelectedModel.Model);
                Log.Information("[WMM] –ú–æ–¥–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –¥–∏—Å–∫–µ: {IsAvailable}", isAvailable);

                if (isAvailable)
                {
                    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –¥—Ä—É–≥–æ–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–¥–µ–ª—å
                    if (!_speechRecognitionService.IsInitialized || 
                        _speechRecognitionService.CurrentModel != SelectedModel.Model)
                    {
                        // üî• –î–û–ë–ê–í–õ–ï–ù–û: –ù–µ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∂–∞—Ç—å –µ—Å–ª–∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è
                        if (_isDownloadingModel)
                        {
                            Log.Information("[WMM] –ú–æ–¥–µ–ª—å –µ—â–µ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è, –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è");
                            RaiseModelStatusChanged("–°–∫–∞—á–∏–≤–∞–µ—Ç—Å—è...", "#ff9800");
                            RaiseDownloadButtonStateChanged(
                                symbol: "ArrowClockwise24",
                                tooltip: "–°–∫–∞—á–∏–≤–∞–µ—Ç—Å—è...",
                                isEnabled: false,
                                appearance: "Secondary"
                            );
                            return;
                        }

                        Log.Information("[WMM] –ü–ï–†–ï–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø! –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å {Model}", SelectedModel.Model);
                        
                        var config = new WhisperConfig { Model = SelectedModel.Model };
                        bool initResult = await _speechRecognitionService.InitializeAsync(config);
                        
                        if (initResult)
                        {
                            Log.Information("[WMM] ‚úÖ –ú–æ–¥–µ–ª—å {Model} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞", SelectedModel.Model);
                            RaiseModelStatusChanged("–ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞", "#4caf50");
                        }
                        else
                        {
                            Log.Error("[WMM] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å {Model}", SelectedModel.Model);
                            RaiseModelStatusChanged("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏", "#f44336");
                            RaiseDownloadButtonStateChanged(
                                symbol: "Warning24",
                                tooltip: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
                                isEnabled: false,
                                appearance: "Caution"
                            );
                            return;
                        }
                    }
                    else
                    {
                        Log.Information("[WMM] ‚úÖ –ú–æ–¥–µ–ª—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
                        RaiseModelStatusChanged("–ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞", "#4caf50");
                    }

                    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–∞–ª–æ—á–∫—É - –º–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞
                    RaiseDownloadButtonStateChanged(
                        symbol: "CheckmarkCircle24",
                        tooltip: "–ú–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞",
                        isEnabled: false,
                        appearance: "Success"
                    );
                }
                else
                {
                    long sizeBytes = await _speechRecognitionService.GetModelSizeAsync(SelectedModel.Model);
                    string sizeText = FormatFileSize(sizeBytes);
                    RaiseModelStatusChanged($"–ú–æ–¥–µ–ª—å –Ω–µ —Å–∫–∞—á–∞–Ω–∞ ({sizeText})", "#ff9800");
                    
                    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–µ–ª–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ - –Ω—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å
                    RaiseDownloadButtonStateChanged(
                        symbol: "ArrowDownload24",
                        tooltip: $"–°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª—å ({sizeText})",
                        isEnabled: true,
                        appearance: "Primary"
                    );
                    
                    Log.Information("[WMM] –ú–æ–¥–µ–ª—å {ModelName} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, —Ä–∞–∑–º–µ—Ä: {Size}", SelectedModel.DisplayName, sizeText);
                }
                
                Log.Information("[WMM] === –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===");
            }
            catch (Exception ex)
            {
                RaiseModelStatusChanged($"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {ex.Message}", "#f44336");
                
                // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
                RaiseDownloadButtonStateChanged(
                    symbol: "Warning24",
                    tooltip: $"–û—à–∏–±–∫–∞: {ex.Message}",
                    isEnabled: false,
                    appearance: "Caution"
                );
                
                Log.Error(ex, "[WMM] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–∏ {ModelName}", SelectedModel?.DisplayName ?? "Unknown");
            }
        }

        /// <summary>
        /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        /// </summary>
        public async Task DownloadModelAsync()
        {
            if (_isDownloadingModel || _speechRecognitionService == null || SelectedModel == null) 
            {
                Log.Warning("[WMM] –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞: downloading={Downloading}, service={ServiceOK}, model={ModelOK}", 
                    _isDownloadingModel, _speechRecognitionService != null, SelectedModel != null);
                return;
            }

            try
            {
                _isDownloadingModel = true;
                RaiseModelStatusChanged("–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...", "#ff9800");
                
                // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏–Ω–Ω–µ—Ä –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
                RaiseDownloadButtonStateChanged(
                    symbol: "ArrowClockwise24",
                    tooltip: "–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...",
                    isEnabled: false,
                    appearance: "Secondary"
                );
                
                Log.Information("[WMM] –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥–µ–ª–∏: {ModelName}", SelectedModel.DisplayName);

                // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
                _speechRecognitionService.DownloadProgress += OnModelDownloadProgress;
                _speechRecognitionService.DownloadCompleted += OnModelDownloadCompleted;

                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å (—ç—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
                var config = new WhisperConfig { Model = SelectedModel.Model };
                await _speechRecognitionService.InitializeAsync(config);
            }
            catch (Exception ex)
            {
                RaiseModelStatusChanged($"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {ex.Message}", "#f44336");
                
                // –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–≤—Ç–æ—Ä–∞
                RaiseDownloadButtonStateChanged(
                    symbol: "ArrowDownload24",
                    tooltip: "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É",
                    isEnabled: true,
                    appearance: "Caution"
                );
                
                Log.Error(ex, "[WMM] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥–µ–ª–∏ {ModelName}", SelectedModel?.DisplayName ?? "Unknown");
                _isDownloadingModel = false;
            }
        }

        /// <summary>
        /// –ù–∞—Ö–æ–¥–∏—Ç –º–æ–¥–µ–ª—å –ø–æ enum –∑–Ω–∞—á–µ–Ω–∏—é
        /// </summary>
        public WhisperModelItem? FindModelByEnum(WhisperModel model)
        {
            var result = AvailableModels.FirstOrDefault(m => m.Model == model);
            Log.Information("[WMM] FindModelByEnum({Model}) = {Result}", model, result?.DisplayName ?? "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
            return result;
        }

        /// <summary>
        /// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        /// </summary>
        public void Cleanup()
        {
            try
            {
                // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã
                if (_speechRecognitionService != null)
                {
                    _speechRecognitionService.DownloadProgress -= OnModelDownloadProgress;
                    _speechRecognitionService.DownloadCompleted -= OnModelDownloadCompleted;
                    // üî• –î–û–ë–ê–í–õ–ï–ù–û: –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
                    _speechRecognitionService.DownloadProgress -= OnBackgroundDownloadProgress;
                    _speechRecognitionService.DownloadCompleted -= OnBackgroundDownloadCompleted;
                }
                
                SelectedModel = null;
                Log.Information("[WMM] Cleanup –∑–∞–≤–µ—Ä—à–µ–Ω");
            }
            catch (Exception ex)
            {
                Log.Error(ex, "[WMM] –û—à–∏–±–∫–∞ –ø—Ä–∏ cleanup");
            }
        }

        #endregion

        #region Private Methods

        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–µ–π
        /// </summary>
        private void InitializeStaticData()
        {
            Log.Information("[WMM] InitializeStaticData –≤—ã–∑–≤–∞–Ω");

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Whisper
            AvailableModels.Clear();
            var models = WhisperModelFactory.CreateAvailableModels();
            foreach (var model in models)
            {
                AvailableModels.Add(model);
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            SelectedModel = WhisperModelFactory.GetDefaultModel();
            
            Log.Information("[WMM] AvailableModels: {Models}", 
                string.Join(", ", AvailableModels.Select(m => m.Model)));
            Log.Information("[WMM] SelectedModel –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {Model}", SelectedModel.DisplayName);
        }

        private void OnModelDownloadProgress(object? sender, ModelDownloadProgressEvent e)
        {
            RaiseModelStatusChanged($"–ó–∞–≥—Ä—É–∑–∫–∞ {e.ProgressPercentage}%...", "#ff9800");
            
            // –û–±–Ω–æ–≤–ª—è–µ–º tooltip –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
            RaiseDownloadButtonStateChanged(
                symbol: "ArrowClockwise24",
                tooltip: $"–ó–∞–≥—Ä—É–∑–∫–∞ {e.ProgressPercentage}%...",
                isEnabled: false,
                appearance: "Secondary"
            );
        }

        private void OnModelDownloadCompleted(object? sender, ModelDownloadCompletedEvent e)
        {
            // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π
            if (_speechRecognitionService != null)
            {
                _speechRecognitionService.DownloadProgress -= OnModelDownloadProgress;
                _speechRecognitionService.DownloadCompleted -= OnModelDownloadCompleted;
            }

            if (e.Success)
            {
                RaiseModelStatusChanged("–ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞", "#4caf50");
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
                RaiseDownloadButtonStateChanged(
                    symbol: "Checkmark24",
                    tooltip: "–ú–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞",
                    isEnabled: false,
                    appearance: "Success"
                );
                
                Log.Information("[WMM] ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
            }
            else
            {
                RaiseModelStatusChanged($"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e.ErrorMessage}", "#f44336");
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–≤—Ç–æ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                RaiseDownloadButtonStateChanged(
                    symbol: "ArrowDownload24",
                    tooltip: "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É",
                    isEnabled: true,
                    appearance: "Caution"
                );
                
                Log.Error("[WMM] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {ErrorMessage}", e.ErrorMessage);
            }

            _isDownloadingModel = false;
        }

        private void OnBackgroundDownloadProgress(object? sender, ModelDownloadProgressEvent e)
        {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∞—è –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
            if (SelectedModel != null && SelectedModel.Model == e.Model)
            {
                RaiseModelStatusChanged($"–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ {e.ProgressPercentage}%...", "#ff9800");
                RaiseDownloadButtonStateChanged(
                    symbol: "ArrowClockwise24",
                    tooltip: $"–ó–∞–≥—Ä—É–∑–∫–∞ {e.ProgressPercentage}%...",
                    isEnabled: false,
                    appearance: "Secondary"
                );
                Log.Information("[WMM] –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ {Model}: {Progress}%", e.Model, e.ProgressPercentage);
            }
        }

        private void OnBackgroundDownloadCompleted(object? sender, ModelDownloadCompletedEvent e)
        {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∞—è –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
            if (SelectedModel != null && SelectedModel.Model == e.Model)
            {
                if (e.Success)
                {
                    RaiseModelStatusChanged("–ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞", "#4caf50");
                    RaiseDownloadButtonStateChanged(
                        symbol: "Checkmark24",
                        tooltip: "–ú–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞",
                        isEnabled: false,
                        appearance: "Success"
                    );
                    Log.Information("[WMM] ‚úÖ –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ {Model} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ", e.Model);
                }
                else
                {
                    RaiseModelStatusChanged($"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e.ErrorMessage}", "#f44336");
                    RaiseDownloadButtonStateChanged(
                        symbol: "ArrowDownload24",
                        tooltip: "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É",
                        isEnabled: true,
                        appearance: "Caution"
                    );
                    Log.Error("[WMM] ‚ùå –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ {Model} –Ω–µ —É–¥–∞–ª–∞—Å—å: {Error}", e.Model, e.ErrorMessage);
                }
            }
        }
        private static string FormatFileSize(long bytes)
        {
            if (bytes >= 1_073_741_824) // GB
                return $"{bytes / 1_073_741_824.0:F1} GB";
            if (bytes >= 1_048_576) // MB
                return $"{bytes / 1_048_576.0:F0} MB";
            if (bytes >= 1024) // KB
                return $"{bytes / 1024.0:F0} KB";
            return $"{bytes} bytes";
        }

        private void RaiseModelStatusChanged(string status, string colorHex)
        {
            ModelStatusChanged?.Invoke(this, new ModelStatusChangedEventArgs(status, colorHex));
        }

        private void RaiseDownloadButtonStateChanged(string symbol, string tooltip, bool isEnabled, string appearance)
        {
            DownloadButtonStateChanged?.Invoke(this, new ModelDownloadButtonStateChangedEventArgs(symbol, tooltip, isEnabled, appearance));
        }

        #endregion
    }

    #region Event Args
    
    /// <summary>
    /// –ê—Ä–≥—É–º–µ–Ω—Ç—ã —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–∏
    /// </summary>
    public class ModelStatusChangedEventArgs : EventArgs
    {
        public string Status { get; }
        public string ColorHex { get; }

        public ModelStatusChangedEventArgs(string status, string colorHex)
        {
            Status = status ?? throw new ArgumentNullException(nameof(status));
            ColorHex = colorHex ?? throw new ArgumentNullException(nameof(colorHex));
        }
    }

    /// <summary>
    /// –ê—Ä–≥—É–º–µ–Ω—Ç—ã —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    /// </summary>
    public class ModelDownloadButtonStateChangedEventArgs : EventArgs
    {
        public string Symbol { get; }
        public string Tooltip { get; }
        public bool IsEnabled { get; }
        public string Appearance { get; }

        public ModelDownloadButtonStateChangedEventArgs(string symbol, string tooltip, bool isEnabled, string appearance)
        {
            Symbol = symbol ?? throw new ArgumentNullException(nameof(symbol));
            Tooltip = tooltip ?? throw new ArgumentNullException(nameof(tooltip));
            IsEnabled = isEnabled;
            Appearance = appearance ?? throw new ArgumentNullException(nameof(appearance));
        }
    }
    
    #endregion
}